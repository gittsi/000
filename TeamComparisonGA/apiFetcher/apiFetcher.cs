using System;
using System.IO;
using System.Net;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using TeamComparisonGA.readTeams;



internal class ApiFetcher
{
    public  async Task<JObject[]> GetResult(string friendlyAllyCode, string foeAllyCode)
    {
        //autogenerated check for empty arguments. 
        if (friendlyAllyCode == null)
        {
            throw new ArgumentNullException(nameof(friendlyAllyCode));
        }

        if (foeAllyCode == null)
        {
            throw new ArgumentNullException(nameof(foeAllyCode));
        }
        //get data for friend and foe
        JObject[] toonData = new JObject[3];
        toonData[0] = await GetAPIData(friendlyAllyCode);
        toonData[1] = await GetAPIData(foeAllyCode);
        TeamsConfiguration teamsConfiguration = new TeamsConfiguration();
        toonData[2] = await teamsConfiguration.ReadFile();
        return toonData;
        //get teams
    }

    //fuνction to get data from swgoh web api
    private async Task<JObject> GetAPIData(string allycode)
    {
        JObject result = new JObject();
        await Task.Run(() =>
        {
            string sgowhhAPI = "https://swgoh.gg/api/player/";
            string finalSwgohAPI = sgowhhAPI + allycode + "/";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(finalSwgohAPI);
            request.AutomaticDecompression = DecompressionMethods.GZip;

            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
            using (Stream stream = response.GetResponseStream())
            using (StreamReader reader = new StreamReader(stream))
            {
                result = JObject.Parse(reader.ReadToEnd());
            }
        });
        return result;

    }
}
